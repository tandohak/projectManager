<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgit.mapper.MemberMapper">
	<sql id="selectSql">
		select * from member
	</sql>
	
	<sql id="whereSql">
		where mno = #{mno}
	</sql>
	
	<sql id="whereSqlWcode">
		where wcode = #{wcode}
	</sql>
	<sql id="whereSqlUno">
		where uno = #{uno}
	</sql>
	<select id="selectOne" resultType="MemberVO">
		select mno, member.uno ,member.wcode, user.firstName, user.lastName,memGrade,user.photoPath,user.email 
		from member join user 
		on member.uno = user.uno 
		<include refid="whereSql" />
	</select>
	
	<select id="selectOneUnoAndwcode" resultType="MemberVO">
		select mno, member.uno ,member.wcode, user.firstName, user.lastName,memGrade,user.photoPath,user.email 
		from member join user 
		on member.uno = user.uno 
		where member.uno = #{uno} and member.wcode = #{wcode}
	</select>  
	 
	<select id="selectListByUno" resultType="MemberVO">
		<include refid="selectSql" />
		<include refid="whereSqlUno" />
	</select>
	 
	<select id="selectListByUnoJoinWorkspace" resultType="MemberVO">
		select mno, member.uno ,member.wcode, workspace.name
		from member join workspace 
		on member.wcode = workspace.wcode 
		where member.uno = #{uno}
		group by mno;  
	</select>
	
	<select id="selectList" resultType="MemberVO">
		<include refid="selectSql" />
	</select>
	
	<select id="selectListByWcode" resultType="MemberVO">
		select mno, member.uno ,member.wcode, user.firstName, user.lastName,memGrade,user.photoPath,user.email 
		from member join user 
		on member.uno = user.uno 
		where member.wcode = #{wcode}
		group by uno 
	</select>
	
	<select id="searchMemberByName" resultType="MemberVO">
		select  mno, member.uno ,member.wcode, user.firstName, user.lastName,memGrade,user.photoPath,user.email 
		from member join user 
		on member.uno = user.uno 
		where concat(user.firstName, " ", user.lastName) like concat('%',#{name},'%')
		and member.wcode = #{wcode}
	</select>
	 
	<select id="selectListByPno" resultType="MemberVO">
		select distinct(member.mno), member.uno ,member.wcode, user.firstName, user.lastName,memGrade,user.photoPath,user.email, memassignment.grade  as memAssGrade
		from member join user join memassignment
		on member.uno = user.uno and member.mno = memassignment.mno
		where  memassignment.pno = #{pno}		 
	</select>  
	    
	<select id="selectOneByPnoAndUno" resultType="MemberVO">
		select distinct(member.mno),massno, member.uno ,member.wcode, user.firstName, user.lastName,memGrade,user.photoPath,user.email, memassignment.grade  as memAssGrade
		from member join user join memassignment
		on member.uno = user.uno and member.mno = memassignment.mno
		where  memassignment.pno = #{pno} and member.uno = #{uno};	 
	</select> 
	
	<select id="selectListByPnoWithMemAssignment" resultType="MemberVO">
		select distinct(member.mno),massno, member.uno ,member.wcode, user.firstName, user.lastName,memGrade,user.photoPath,user.email, memassignment.grade  as memAssGrade
		from member join user join memassignment
		on member.uno = user.uno and member.mno = memassignment.mno
		where  memassignment.pno = #{pno}
	</select>
	
	<insert id="insert"> 	
		insert into member
		(uno,wcode,memGrade)
		values(#{uno},#{wcode},#{memGrade})
	</insert>  

	<delete id="delete">
	    delete from member
		<include refid="whereSql" />
	</delete>
	
	<update id="update">	    
	    update member set
	    memGrade = #{memGrade}
		<include refid="whereSql" />
	</update>
</mapper>